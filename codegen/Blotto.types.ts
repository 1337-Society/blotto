/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Timestamp = Uint64;
export type Uint64 = string;
export interface InstantiateMsg {
  data: InstantiateMsgData;
  [k: string]: unknown;
}
export interface InstantiateMsgData {
  armies: ArmyInfo[];
  battle_duration: Timestamp;
  battlefields: BattlefieldInfo[];
  denom: string;
}
export interface ArmyInfo {
  description?: string | null;
  image_uri?: string | null;
  ipfs_uri?: string | null;
  name: string;
}
export interface BattlefieldInfo {
  description?: string | null;
  image_uri?: string | null;
  ipfs_uri?: string | null;
  name: string;
  value: number;
}
export type ExecuteMsg = ExecMsg;
export type ExecMsg = {
  stake: {
    army_id: number;
    battlefield_id: number;
    [k: string]: unknown;
  };
} | {
  tally: {
    [k: string]: unknown;
  };
} | {
  withdraw: {
    [k: string]: unknown;
  };
};
export type QueryMsg = QueryMsg1;
export type QueryMsg1 = {
  armies: {
    [k: string]: unknown;
  };
} | {
  army: {
    id: number;
    [k: string]: unknown;
  };
} | {
  army_totals_by_battlefield: {
    army_id: number;
    battlefield_id: number;
    [k: string]: unknown;
  };
} | {
  battlefield: {
    id: number;
    [k: string]: unknown;
  };
} | {
  battlefields: {
    [k: string]: unknown;
  };
} | {
  config: {
    [k: string]: unknown;
  };
} | {
  player_info: {
    player: string;
    [k: string]: unknown;
  };
} | {
  status: {
    [k: string]: unknown;
  };
};
export type Uint128 = string;
export type ArrayOfArmy = Army[];
export interface Army {
  description?: string | null;
  id: number;
  image_uri?: string | null;
  ipfs_uri?: string | null;
  name: string;
  total_staked: Uint128;
  victory_points: number;
}
export interface Battlefield {
  description?: string | null;
  id: number;
  image_uri?: string | null;
  ipfs_uri?: string | null;
  name: string;
  value: number;
  winner?: number | null;
}
export type ArrayOfBattlefield = Battlefield[];
export interface Config {
  battle_duration: Timestamp;
  denom: string;
  start: Timestamp;
}
export type Addr = string;
export interface PlayerInfoResponse {
  stakes: StakeInfo[];
}
export interface StakeInfo {
  amount: Uint128;
  army: number;
  battlefield_id: number;
  player: Addr;
}
export type GamePhase = "not_started" | "open" | "closed";
export interface StatusResponse {
  game_phase: GamePhase;
  winner?: Army | null;
}